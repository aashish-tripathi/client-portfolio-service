crypto.datasource.url=jdbc:sqlite:crypto_db.db
#datasource.url=jdbc:sqlite:memory
crypto.datasource.driverClassName=
crypto.datasource.username=
crypto.datasource.password=

# command, queries
crypto.datasource.delete=drop table if exists security
crypto.datasource.create=create table security (id integer, ticker string,  type string, strikePrice float, maturityDate string)
crypto.datasource.inserts=insert into security values(1, 'AAPL','stock', 110, "N/A")\
  :insert into security values(2, 'AAPL-OCT-2020-110-C','call', 5.55, "OCT-29-2020")\
  :insert into security values(3, 'AAPL-OCT-2020-110-P','put', 0.55, "OCT-29-2020")\
  :insert into security values(4, 'TELSA','stock', 450, "N/A")\
  :insert into security values(5, 'TELSA-NOV-2020-400-C','call', 27.25, "NOV-26-2020")\
  :insert into security values(6, 'TELSA-DEC-2020-400-P','put', 6.35, "DEC-31-2020"):
crypto.datasource.select= select * from security
